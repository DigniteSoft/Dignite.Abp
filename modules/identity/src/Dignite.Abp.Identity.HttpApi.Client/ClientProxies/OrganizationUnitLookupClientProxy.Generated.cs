// This file is automatically generated by ABP framework to use MVC Controllers from CSharp
using System;
using System.Threading.Tasks;
using Volo.Abp.Application.Dtos;
using Volo.Abp.Http.Client;
using Volo.Abp.Http.Modeling;
using Volo.Abp.DependencyInjection;
using Volo.Abp.Http.Client.ClientProxying;
using Dignite.Abp.Identity;

// ReSharper disable once CheckNamespace
namespace Dignite.Abp.Identity.ClientProxies;

[Dependency(ReplaceServices = true)]
[ExposeServices(typeof(IOrganizationUnitLookupAppService), typeof(OrganizationUnitLookupClientProxy))]
public partial class OrganizationUnitLookupClientProxy : ClientProxyBase<IOrganizationUnitLookupAppService>, IOrganizationUnitLookupAppService
{
    public virtual async Task<OrganizationUnitDto> FindByCodeAsync(string code)
    {
        return await RequestAsync<OrganizationUnitDto>(nameof(FindByCodeAsync), new ClientProxyRequestTypeValue
        {
            { typeof(string), code }
        });
    }

    public virtual async Task<OrganizationUnitDto> FindByIdAsync(Guid id)
    {
        return await RequestAsync<OrganizationUnitDto>(nameof(FindByIdAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), id }
        });
    }

    public virtual async Task<ListResultDto<OrganizationUnitDto>> GetChildrenAsync(GetOrganizationUnitsInput input)
    {
        return await RequestAsync<ListResultDto<OrganizationUnitDto>>(nameof(GetChildrenAsync), new ClientProxyRequestTypeValue
        {
            { typeof(GetOrganizationUnitsInput), input }
        });
    }

    public virtual async Task<ListResultDto<OrganizationUnitDto>> GetParentsAsync(Guid id)
    {
        return await RequestAsync<ListResultDto<OrganizationUnitDto>>(nameof(GetParentsAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), id }
        });
    }
}
