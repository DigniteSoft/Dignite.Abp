@using Dignite.Abp.FieldCustomizing.Blazor
@using Dignite.Abp.FieldCustomizing.Fields
@using Dignite.Abp.FieldCustomizing.Fields.Upload
@using Dignite.Abp.FieldCustomizing
@using Microsoft.AspNetCore.Components.Forms
@inherits FieldControlComponentBase

    <Field Horizontal="@(!HideFieldLable)">
        <FieldLabel ColumnSize="ColumnSize.Is2.OnDesktop" hidden="@HideFieldLable">@CustomizeField.Definition.DisplayName</FieldLabel>
        <FieldBody ColumnSize="ColumnSize.Is10.OnDesktop">      
            <FileEdit Changed="@OnFileChanged" Multiple="@Configuration.Multiple" Filter="@Configuration.Filter" Placeholder="@Configuration.Placeholder" />
            <UploadFieldComponent CustomizeField="@CustomizeField" HideFieldLable="true"></UploadFieldComponent>
            <FieldHelp>@Configuration.Description</FieldHelp>
        </FieldBody>
    </Field>


@code{
    public override Type FieldProviderType => typeof(UploadFieldProvider);

    public UploadConfiguration Configuration { get; set; }

    protected override void OnParametersSet()
    {
        Configuration = new UploadConfiguration(CustomizeField.Definition.Configuration);
    }
    

    private Task OnFileChanged( FileChangedEventArgs e )
    {
        if (e.Files.Any())
        {
            List<IFileEntry> files = new List<IFileEntry>();
            foreach (var file in e.Files)
            {
                files.Add(file);
            }
            CustomizeField.Entity.SetField(CustomizeField.Definition.Name, files);
        }
        return Task.CompletedTask;
    }
}