@using Dignite.Abp.FieldCustomizing.Blazor
@using Dignite.Abp.FieldCustomizing.Fields
@using Dignite.Abp.FieldCustomizing.Fields.Switch
@using Dignite.Abp.FieldCustomizing
@using Microsoft.AspNetCore.Components.Forms
@inherits FieldControlComponentBase

    <Field Horizontal="@(!HideFieldLable)">
        <FieldLabel ColumnSize="ColumnSize.Is2.OnDesktop" hidden="@HideFieldLable">@CustomizeField.Definition.DisplayName</FieldLabel>
        <FieldBody ColumnSize="ColumnSize.Is10.OnDesktop" Margin="Margin.IsAuto">      
            <Switch TValue="bool" Checked="@Checked(CustomizeField.Entity.GetField(CustomizeField.Definition.Name))" CheckedChanged="@OnCheckedChanged"></Switch>
            <FieldHelp>@Configuration.Description</FieldHelp>
        </FieldBody>
    </Field>


@code{
    public override Type FieldProviderType => typeof(SwitchFieldProvider);

    public SwitchConfiguration Configuration { get; set; }

    protected override void OnParametersSet()
    {
        Configuration = new SwitchConfiguration(CustomizeField.Definition.Configuration);
    }


    private bool Checked(object value)
    {
        if (value == null)
            return false;
        else
        {
            bool defaultChecked = false;
            bool.TryParse(value.ToString(), out defaultChecked);
            return defaultChecked;
        }
    }

    Task OnCheckedChanged(bool value )
    {
        CustomizeField.Entity.SetField(CustomizeField.Definition.Name, value);

        return Task.CompletedTask;
    }
}